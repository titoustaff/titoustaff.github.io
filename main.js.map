{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/admin/admin.component.css","webpack:///./src/app/admin/admin.component.html","webpack:///./src/app/admin/admin.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/atelier/atelier.component.css","webpack:///./src/app/atelier/atelier.component.html","webpack:///./src/app/atelier/atelier.component.ts","webpack:///./src/app/header-tableau/header-tableau.component.css","webpack:///./src/app/header-tableau/header-tableau.component.html","webpack:///./src/app/header-tableau/header-tableau.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/models/player-info.model.ts","webpack:///./src/app/services/authentication.service.ts","webpack:///./src/app/services/navbar.service.ts","webpack:///./src/app/user/user.component.css","webpack:///./src/app/user/user.component.html","webpack:///./src/app/user/user.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<p>\\n  <strong>ADMIN page</strong> works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        redirectTo: '/home',\r\n        pathMatch: 'full'\r\n    },\r\n    {\r\n        path: 'home',\r\n        component: HomeComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \".centre {\\ntext-align:center;\\n}\\n\\n.tableaux{\\ndisplay:inline-block;\\nvertical-align:top;\\n}\\t\"","module.exports = \"<!-- <nav class=\\\"navbar navbar-inverse\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"navbar-header\\\">\\n      <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Golf Data Tournaments</a>\\n    </div>\\n    <ul class=\\\"nav navbar-nav\\\" routerLinkActive=\\\"active\\\">\\n      <li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" routerLink=\\\"home\\\">Home</a></li>\\n      <li class=\\\"nav-item\\\" *ngFor=\\\"let link of links\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"link.path\\\">{{ link.text }}</a>\\n      </li>\\n      <li class=\\\"nav-item\\\" *ngIf=\\\"isLoggedIn\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"logout\\\" (click)=\\\"logout()\\\">Logout</a>\\n      </li>\\n      <li class=\\\"nav-item \\\" *ngIf=\\\"!isLoggedIn\\\" style=\\\"text-align: center;\\\">\\n        <input type=\\\"text\\\" placeholder=\\\"Username\\\" name=\\\"username\\\" required >\\n      </li>\\n      <li class=\\\"nav-item \\\" *ngIf=\\\"!isLoggedIn\\\" style=\\\"text-align: center;\\\">\\n      <input type=\\\"password\\\" placeholder=\\\"Password\\\" name=\\\"password\\\" required required >\\n      </li>\\n      <li class=\\\"nav-item \\\" *ngIf=\\\"!isLoggedIn\\\" style=\\\"text-align: center;\\\">\\n        <button class=\\\"btn btn-primary\\\" (click)=\\\"verfiyLogin()\\\" required >Login</button> \\n      </li>\\n    </ul>\\n  </div>\\n</nav> -->\\n\\n<nav class=\\\"navbar navbar-inverse\\\">\\n  \\n  <div class=\\\"tableaux\\\">\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Golf Data Tournaments</a>\\n  </div>\\n  \\n  <div class=\\\"tableaux\\\">\\n    <ul class=\\\"nav navbar-nav\\\" routerLinkActive=\\\"active\\\">\\n        <li class=\\\"nav-item\\\" *ngFor=\\\"let link of links\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"link.path\\\">{{ link.text }}</a>\\n        </li>\\n    </ul>\\n\\n  </div>\\n  \\n  <div class=\\\"tableaux\\\"  style=\\\"float: right;\\\">\\n      <input type=\\\"text\\\" placeholder=\\\"Username\\\" name=\\\"username\\\" required *ngIf=\\\"!isLoggedIn\\\"><br>\\n      <input type=\\\"password\\\" placeholder=\\\"Password\\\" name=\\\"password\\\" required required  *ngIf=\\\"!isLoggedIn\\\"><br>\\n      \\n      <label *ngIf=\\\"!isLoggedIn\\\"><input type=\\\"checkbox\\\" checked=\\\"checked\\\" name=\\\"remember\\\" > Remember me</label>.\\n      <button class=\\\"btn btn-primary\\\" (click)=\\\"verfiyLogin()\\\" required *ngIf=\\\"!isLoggedIn\\\" >Login</button> \\n      <button class=\\\"btn btn-primary\\\" routerLink=\\\"logout\\\" (click)=\\\"logout()\\\" *ngIf=\\\"isLoggedIn\\\" >Logout</button> \\n  </div>\\n</nav>\\n<!-- class=\\\"container\\\" -->\\n<div >\\n  <router-outlet></router-outlet>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserComponent } from './user/user.component';\nimport { AdminComponent } from './admin/admin.component';\nimport { LoginComponent } from './login/login.component';\nimport { AtelierComponent } from './atelier/atelier.component';\n\nimport { NavbarService } from './services/navbar.service';\nimport { AuthenticationService } from './services/authentication.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  links: Array<{ text: string, path: string }>;\n  isLoggedIn = false;\n\n  constructor(private router: Router, private navbarService: NavbarService,  private authenticationService: AuthenticationService) {\n    this.router.config.unshift(\n     /* { path: 'login', component: LoginComponent },*/\n     /* { path: 'user', component: UserComponent },\n      { path: 'admin', component: AdminComponent },*/\n      { path: 'atelier', component: AtelierComponent },\n    );\n  }\n\n  ngOnInit() {\n    this.links = this.navbarService.getLinks();\n    this.navbarService.getLoginStatus().subscribe(status => this.isLoggedIn = status);\n  }\n\n  logout() {\n    this.navbarService.updateLoginStatus(false);\n    this.router.navigate(['home']);\n  }\n\n  verfiyLogin() {\n    this.authenticationService.loginAdmin();\n    /*if (this.authenticationService.verification(this.username, this.password)) {\n      this.loginAdmin();\n    } else{\n      this.loginUser()\n    }*/\n\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { UserComponent } from './user/user.component';\nimport { AdminComponent } from './admin/admin.component';\nimport { LoginComponent } from './login/login.component';\nimport { AtelierComponent } from './atelier/atelier.component';\nimport { HeaderTableauComponent } from './header-tableau/header-tableau.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    UserComponent,\n    AdminComponent,\n    LoginComponent,\n    AtelierComponent,\n    HeaderTableauComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  entryComponents: [\n    LoginComponent,\n    UserComponent,\n    AdminComponent,\n    AtelierComponent,\n    HeaderTableauComponent\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<p>\\n  Impression des cartes atelier!\\n</p>\\n<div>\\n  <div>Select images:&nbsp;</div>\\n  <div> <input type=\\\"file\\\" name=\\\"img\\\" (change)=\\\"handleFileInput2($event.target.files)\\\" multiple> </div>\\n</div>\\n \\nNombre de fiche joueur : {{tabPlayerInfos?.length}} &nbsp;\\n<button (click)=\\\"removeDouble()\\\">Suppression des doubles par N°license</button>&nbsp;\\n<button (click)=\\\"onClickMe()\\\">Edition du document par catégorie d'age !</button>\\n<button (click)=\\\"ngOnInit()\\\">Raz de la page</button><BR>\\n\\n<div style=\\\"margin: 30px 30px 30px 30px\\\">\\n  <button (click)=\\\"getmailList()\\\">Recuperer les mails</button><br>\\n  <textarea rows=\\\"15\\\" cols=\\\"180\\\" ng *ngIf=\\\"emails.length > 0\\\">{{emails?.join('; ')}}</textarea>\\n</div>\\n\\n<div style=\\\"margin: 30px 30px 30px 30px\\\">\\n    <button (click)=\\\"viewAllInformation()\\\">Voir les information brutes</button><br>\\n    <table *ngIf=\\\"isViewInformation\\\" style=\\\"margin: 30px 0 0 0\\\">\\n        <thead>\\n            <tr style=\\\"border:1px solid black\\\">\\n                <th style=\\\"border:1px solid black\\\">N° Licence</th>\\n                <th style=\\\"border:1px solid black\\\" >Prénom</th>\\n                <th style=\\\"border:1px solid black\\\">Nom</th>\\n                <th style=\\\"border:1px solid black\\\">Circuit</th>\\n                <th style=\\\"border:1px solid black\\\">Catégorie</th>\\n                <th style=\\\"border:1px solid black\\\">Nbr round</th>\\n                <th style=\\\"border:1px solid black\\\">Email</th>\\n                <th style=\\\"border:1px solid black\\\">Téléphone</th>\\n                <th style=\\\"border:1px solid black\\\">Commentaire</th>\\n                <th style=\\\"border:1px solid black\\\">Date inscription</th>\\n            </tr>\\n        </thead>\\n        <tbody style=\\\"border:1px solid black\\\">\\n            <tr *ngFor=\\\"let hero of tabPlayerInfos\\\" style=\\\"border:1px solid black\\\">\\n                <td style=\\\"border:1px solid black\\\">{{hero.ffgNumber}} &nbsp;</td>\\n                <td style=\\\"border:1px solid black\\\">{{hero.prenom}}&nbsp;</td>\\n                <td style=\\\"border:1px solid black\\\">{{hero.nom}}&nbsp;</td>\\n                <td style=\\\"border:1px solid black\\\">{{hero.circuit}}&nbsp;</td>\\n                <td style=\\\"border:1px solid black\\\">{{hero.categorie}}&nbsp;</td>\\n                <td style=\\\"border:1px solid black\\\">{{hero.nbrRoundThisYear}}&nbsp;</td>\\n                <td style=\\\"border:1px solid black\\\">{{hero.email}}&nbsp;</td>\\n                <td style=\\\"border:1px solid black\\\">{{hero.phoneNumber}}&nbsp;</td>\\n                <td style=\\\"border:1px solid black\\\">{{hero.comment}}&nbsp;</td>\\n                <td style=\\\"border:1px solid black\\\" >{{hero.date}}&nbsp;</td>\\n            </tr>\\n        </tbody>\\n      </table>\\n  </div>\\n    \\n\\n<button (click)=\\\"printDiv('printableArea1')\\\">print page 1!</button>\\n<button (click)=\\\"newpagePrintage('printableArea1')\\\">print page 1*!</button>\\n<div id=\\\"printableArea1\\\"\\n      style=\\\"width: 210mm; height: 297mm; margin-left: auto;margin-right: auto; border-color: coral; border-style: solid; \\\">\\n      <div *ngFor=\\\"let item of categorie\\\">\\n          <app-header-tableau [currentcategorie]=\\\"item\\\" \\n                              [tabPlayersInfos]=getElementListByCategorie(item,tabPlayerInfosList1)\\n                              [printHeader]=defineifHeader(item,tabPlayerInfosList1)></app-header-tableau>\\n      </div>\\n</div>\\n<br><br>\\n<hr>\\n<button (click)=\\\"printDiv('printableArea2')\\\" *ngIf=\\\"tabPlayerInfosList2.length > 0\\\">print page 2!</button>\\n<button (click)=\\\"newpagePrintage('printableArea2')\\\" *ngIf=\\\"tabPlayerInfosList2.length > 0\\\">print page 2*!</button>\\n\\n<div  id=\\\"printableArea2\\\"\\n      *ngIf=\\\"tabPlayerInfosList2.length > 0\\\"\\n      style=\\\"width: 210mm; height: 297mm; margin-left: auto;margin-right: auto; border-color: coral; border-style: solid; \\\">\\n      <div *ngFor=\\\"let item of categorie\\\">\\n          <app-header-tableau [currentcategorie]=\\\"item\\\" \\n                              [tabPlayersInfos]=getElementListByCategorie(item,tabPlayerInfosList2)\\n                              [printHeader]=defineifHeader(item,tabPlayerInfosList2)></app-header-tableau>\\n      </div>\\n</div>\\n\\n<button (click)=\\\"printDiv('printableArea3')\\\" *ngIf=\\\"tabPlayerInfosList3.length > 0\\\">print page 3!</button>\\n<button (click)=\\\"newpagePrintage('printableArea3')\\\" *ngIf=\\\"tabPlayerInfosList3.length > 0\\\">print page 3*!</button>\\n\\n<div  id=\\\"printableArea3\\\"\\n      *ngIf=\\\"tabPlayerInfosList3.length > 0\\\"\\n      style=\\\"width: 210mm; height: 297mm; margin-left: auto;margin-right: auto; border-color: coral; border-style: solid; \\\">\\n      <div *ngFor=\\\"let item of categorie\\\">\\n          <app-header-tableau [currentcategorie]=\\\"item\\\" \\n                              [tabPlayersInfos]=getElementListByCategorie(item,tabPlayerInfosList3)\\n                              [printHeader]=defineifHeader(item,tabPlayerInfosList3)></app-header-tableau>\\n      </div>\\n</div>\\n\\n\\n<button (click)=\\\"printDiv('printableArea4')\\\" *ngIf=\\\"tabPlayerInfosList4.length > 0\\\">print page 3!</button>\\n<button (click)=\\\"newpagePrintage('printableArea4')\\\" *ngIf=\\\"tabPlayerInfosList4.length > 0\\\">print page 3*!</button>\\n\\n<div  id=\\\"printableArea4\\\"\\n      *ngIf=\\\"tabPlayerInfosList4.length > 0\\\"\\n      style=\\\"width: 210mm; height: 297mm; margin-left: auto;margin-right: auto; border-color: coral; border-style: solid; \\\">\\n      <div *ngFor=\\\"let item of categorie\\\">\\n          <app-header-tableau [currentcategorie]=\\\"item\\\" \\n                              [tabPlayersInfos]=getElementListByCategorie(item,tabPlayerInfosList4)\\n                              [printHeader]=defineifHeader(item,tabPlayerInfosList4)></app-header-tableau>\\n      </div>\\n</div>\\n\\n\\n\\n<!-- <button (click)=\\\"printDiv('printableArea3')\\\">print a div!</button>\\n<div id=\\\"printableArea3\\\"\\n      style=\\\"width: 210mm; height: 297mm; margin-left: auto;margin-right: auto; border-color: coral; border-style: solid; \\\">\\n                         \\n      <app-header-tableau [currentcategorie]=\\\"10\\\" \\n                          [printAreaBottom]=div1BottomValue\\n                          [tabPlayersInfos]=getElementListByCategorie(10)\\n                          [printHeader]=true></app-header-tableau>    \\n\\n      <app-header-tableau [currentcategorie]=\\\"8\\\" \\n                          [printAreaBottom]=div1BottomValue\\n                          [tabPlayersInfos]=getElementListByCategorie(8)\\n                          [printHeader]=false></app-header-tableau> \\n \\n      \\n  \\n</div> \\n\\n\\n<table>\\n    <thead>\\n        <tr style=\\\"border:1px solid black\\\">\\n            <th style=\\\"border:1px solid black\\\">N° Licence</th>\\n            <th style=\\\"border:1px solid black\\\" >Prénom</th>\\n            <th style=\\\"border:1px solid black\\\">Nom</th>\\n            <th style=\\\"border:1px solid black\\\">Circuit</th>\\n            <th style=\\\"border:1px solid black\\\">Catégorie</th>\\n            <th style=\\\"border:1px solid black\\\">Nbr round</th>\\n            <th style=\\\"border:1px solid black\\\">Email</th>\\n            <th style=\\\"border:1px solid black\\\">Téléphone</th>\\n            <th style=\\\"border:1px solid black\\\">Commentaire</th>\\n            <th style=\\\"border:1px solid black\\\">Date inscription</th>\\n        </tr>\\n    </thead>\\n    <tbody style=\\\"border:1px solid black\\\">\\n        <tr *ngFor=\\\"let hero of tabPlayerInfos\\\" style=\\\"border:1px solid black\\\">\\n            <td style=\\\"border:1px solid black\\\">{{hero.ffgNumber}} &nbsp;</td>\\n            <td style=\\\"border:1px solid black\\\">{{hero.prenom}}&nbsp;</td>\\n            <td style=\\\"border:1px solid black\\\">{{hero.nom}}&nbsp;</td>\\n            <td style=\\\"border:1px solid black\\\">{{hero.circuit}}&nbsp;</td>\\n            <td style=\\\"border:1px solid black\\\">{{hero.categorie}}&nbsp;</td>\\n            <td style=\\\"border:1px solid black\\\">{{hero.nbrRoundThisYear}}&nbsp;</td>\\n            <td style=\\\"border:1px solid black\\\">{{hero.email}}&nbsp;</td>\\n            <td style=\\\"border:1px solid black\\\">{{hero.phoneNumber}}&nbsp;</td>\\n            <td style=\\\"border:1px solid black\\\">{{hero.comment}}&nbsp;</td>\\n            <td style=\\\"border:1px solid black\\\" >{{hero.date}}&nbsp;</td>\\n        </tr>\\n    </tbody>\\n  </table>\\n\\n-->\\n<hr>\\n\\n<hr>\\n\\n<!-- \\n<button (click)=\\\"printDiv('printableArea1')\\\">print a div!</button>\\n<div id=\\\"printableArea1\\\"\\n      style=\\\"width: 210mm; height: 297mm; margin-left: auto;margin-right: auto; border-color: coral; border-style: solid; \\\">\\n    \\n  <table  style=\\\"width: 100%;margin-top: 30px;\\\"> \\n     \\n    <tbody >\\n      <tr style=\\\"text-align: center;\\\">\\n        <td style=\\\"width: 50%;\\\">&nbsp;<img width=\\\"250\\\" src=\\\"assets/img/logoMistral.png\\\">&nbsp;</td>\\n        <td style=\\\"width: 50%; text-align: center;\\\">\\n            <p><span style=\\\"text-decoration: underline;\\\"><strong> Atelier </strong></span></p>\\n            <p><strong>&nbsp;Stadium&nbsp;</strong> <input id=\\\"scales\\\" name=\\\"scales\\\" type=\\\"checkbox\\\" />&nbsp;<strong>&nbsp;Putting&nbsp;</strong> <input id=\\\"scales\\\" name=\\\"scales\\\" type=\\\"checkbox\\\" /></p>\\n            <p><strong>Approche&nbsp;</strong> <input id=\\\"scales\\\" name=\\\"scales\\\" type=\\\"checkbox\\\" />&nbsp;<strong>&nbsp;Trackman&nbsp;</strong> <input id=\\\"scales\\\" name=\\\"scales\\\" type=\\\"checkbox\\\" /></p>\\n        </td> \\n      </tr>\\n      <tr>\\n          <td colspan=\\\"2\\\">&nbsp;</td> \\n      </tr> \\n      <tr>\\n      <td colspan=\\\"2\\\">\\n        <table style=\\\"width: 90%; margin-left: auto; margin-right: auto;\\\">\\n             <tbody *ngFor=\\\"let currentCategorie of categorie\\\">\\n\\n                  <tr style=\\\"border:1px solid black;text-align: center;\\\">\\n                      <th style=\\\"border:1px solid black ; text-align: center;\\\">U{{ currentCategorie}}</th>\\n                      <th style=\\\"border:1px solid black; text-align: center;\\\" colspan=\\\"3\\\">Score</th>\\n                      <th style=\\\"border:1px solid black; text-align: center;\\\">Classement</th>\\n                  </tr>\\n                  <tr *ngFor=\\\"let hero of getElementListByCategorie(currentCategorie)\\\" \\n                      [attr.id]=\\\"hero.ffgNumber\\\"\\n                      style=\\\"border:1px solid black\\\">\\n                    <td style=\\\"border:1px solid black; width: 40%;\\\" >&nbsp;{{hero.nom}} {{hero.prenom}}&nbsp;</td>\\n                    <td style=\\\"border:1px solid black; width: 15%;\\\">&nbsp;&nbsp;</td>\\n                    <td style=\\\"border:1px solid black; width: 15%;\\\">&nbsp;&nbsp;</td>\\n                    <td style=\\\"border:1px solid black; width: 15%\\\">&nbsp;&nbsp;</td>\\n                    <td style=\\\"border:1px solid black; width: 20%;\\\">&nbsp;&nbsp;{{controleDivPosition('printableArea1', hero.ffgNumber)}}</td>\\n                  </tr>\\n                  <tr>\\n                      <td style=\\\"border:1px solid black;\\\" colspan=\\\"5\\\">&nbsp;</td> \\n                  </tr>\\n            </tbody>\\n\\n          </table>  \\n        </td>\\n      </tr>\\n    </tbody>\\n  </table> \\n</div>-->\\n\\n\\n\"","import { Component, OnInit, ɵConsole } from '@angular/core';\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { Inject } from \"@angular/core\";\nimport { DOCUMENT } from '@angular/platform-browser';\n\nimport { PlayerInfo } from '../models/player-info.model'\n@Component({\n  selector: 'app-atelier',\n  templateUrl: './atelier.component.html',\n  styleUrls: ['./atelier.component.css']\n})\nexport class AtelierComponent implements OnInit {\n\n  public tabPlayerInfos: PlayerInfo[] = [];\n  public categorie: number[] = [16, 14, 12, 10, 8];\n  constructor(@Inject(DOCUMENT) private document: Document) { }\n\n  ngOnInit() {\n\n  }\n\n  reloadComponent() { }\n\n  public startCategorie: number = 16;\n  public sliceValue: number = 0;\n\n  defineTheContexte(categorie: number, arrayList: PlayerInfo[]) {\n    var listeElementTraiter = this.getElementListByCategorie(categorie, arrayList);\n    var nbElementTraiter = listeElementTraiter.length;\n    var iterableNumber = 0;\n    var nbElementTotalTraiter = 0;\n    while (this.categorie[iterableNumber] >= categorie) {\n      var currentCategorie = this.categorie[iterableNumber]\n      nbElementTotalTraiter = nbElementTotalTraiter + this.getElementListByCategorie(currentCategorie, arrayList).length;\n      iterableNumber++;\n    }\n    if ((nbElementTotalTraiter + nbElementTraiter) > 35) {\n      this.startCategorie = categorie;\n      console.log('RAS A FAIRE categorie = ' + categorie);\n    } else {\n      if (nbElementTotalTraiter > 0) this.sliceValue = this.sliceValue + 1;\n    }\n\n  }\n\n  defineifHeader(categorie: number, arrayList: PlayerInfo[]) {\n    if (arrayList.length > 0 && arrayList[0].categorie == categorie) return true;\n  }\n\n  /* read the current file of select file on liste */\n  readFileToarray(value) {\n\n    var splitted = value.split(\"\\n\");\n    var splitted2 = splitted.shift();\n\n    for (let i = 0; i < splitted.length; i++) {\n      // split content based on comma  \n      let data = splitted[i].split(';');\n      if (data != undefined && data[0] != undefined && data[0].length > 2) {\n        this.tabPlayerInfos.push(new PlayerInfo()\n          .build(this.convertString(data[0]),\n            this.convertString(this.stringToLowerCase(this.stringReplaceSpecial(data[1]))),\n            this.convertString(this.stringToUpperCase(this.stringReplaceSpecial(data[2]))),\n            this.convertString(data[3]),\n            this.convertString(data[4]),\n            this.convertString(data[5]),\n            this.convertString(data[6]),\n            this.convertString(data[7]),\n            this.convertString(data[8]),\n            this.convertString(data[9])));\n      }\n    }\n  }\n\n  uploadThisDocument(document) {\n    let fileReader = new FileReader();\n    fileReader.onload = (e) => {\n      this.readFileToarray(fileReader.result);\n    }\n    fileReader.readAsText(document);\n  }\n\n  handleFileInput2(files: FileList) {\n    for (let i = 0; i < files.length; i++) {\n      this.uploadThisDocument(files.item(i))\n    }\n  }\n\n\n  newpagePrintage(currentDiv) {\n    /*var pageContent = document.getElementById(currentDiv).innerHTML; \n    sessionStorage.setItem(\"page1content\", pageContent);*/\n\n    let printContents, popupWin;\n    printContents = document.getElementById(currentDiv).innerHTML;\n    popupWin = window.open('', '_blank', 'top=0,left=0,height=100%,width=auto');\n    popupWin.document.open();\n    popupWin.document.write(`\n      <html>\n        <head>\n          <title>Print tab</title>\n          <style>\n          //........Customized style.......\n          </style>\n        </head>\n    <body onload=\"window.print();window.close()\">${printContents}</body>\n      </html>`\n    );\n    popupWin.document.close();\n\n  }\n  /* force replace encoding error */\n  stringReplaceSpecial(maChaine: string): string {\n\n    if (maChaine) {\n      maChaine = maChaine.replace('�', 'é');\n    }\n    return maChaine;\n  }\n\n  /* capitablise string parameter */\n  stringToLowerCase(maChaine): string {\n    if (maChaine) {\n      maChaine = maChaine.toLowerCase();\n      var nameCapitalized = maChaine.charAt(0).toUpperCase() + maChaine.slice(1);\n      return nameCapitalized\n    }\n    return maChaine;\n  }\n\n  /* uppercas string parameter */\n  stringToUpperCase(maChaine): string {\n    if (maChaine) {\n      var nameCapitalized = maChaine.toUpperCase();\n      return nameCapitalized\n    }\n    return maChaine;\n  }\n\n  getElementListByCategorie(categorie, listeArray): PlayerInfo[] {\n    return listeArray.filter(function (item) {\n      if (item.categorie == categorie) {\n        return true;\n      }\n      return false;\n    });\n  }\n\n  public tabPlayerInfosList1: PlayerInfo[] = [];\n  public tabPlayerInfosList2: PlayerInfo[] = [];\n  public tabPlayerInfosList3: PlayerInfo[] = [];\n  public tabPlayerInfosList4: PlayerInfo[] = [];\n  public tabPlayerInfosList5: PlayerInfo[] = [];\n  /* sort string function and split array */\n  onClickMe() {\n\n    var u16: PlayerInfo[] = this.getElementListByCategorie('16', this.tabPlayerInfos);\n    var u16T = this.sortByName(u16);\n\n    var u14: PlayerInfo[] = this.getElementListByCategorie('14', this.tabPlayerInfos);\n    var u14T = this.sortByName(u14);\n\n    var u12: PlayerInfo[] = this.getElementListByCategorie('12', this.tabPlayerInfos);\n    var u12T = this.sortByName(u12);\n\n    var u10: PlayerInfo[] = this.getElementListByCategorie('10', this.tabPlayerInfos);\n    var u10T = this.sortByName(u10);\n\n    var u8: PlayerInfo[] = this.getElementListByCategorie('8', this.tabPlayerInfos);\n    var u8T = this.sortByName(u8);\n\n    var nexTab: PlayerInfo[] = [];\n    Array.prototype.push.apply(nexTab, u16T);\n    Array.prototype.push.apply(nexTab, u14T);\n    Array.prototype.push.apply(nexTab, u12T);\n    Array.prototype.push.apply(nexTab, u10T);\n    Array.prototype.push.apply(nexTab, u8T);\n    this.tabPlayerInfos = nexTab;\n\n\n    //split array value\n    var temporytabPlayerInfos = this.tabPlayerInfos;\n    this.tabPlayerInfosList1 = this.tabPlayerInfos.slice(0, 30);\n    this.tabPlayerInfosList2 = this.tabPlayerInfos.slice(30, 60);\n    this.tabPlayerInfosList3 = this.tabPlayerInfos.slice(60, 90);\n    this.tabPlayerInfosList4 = this.tabPlayerInfos.slice(90, 120);\n\n  }\n\n  sortByName(listeArray: PlayerInfo[]): PlayerInfo[] {\n    return listeArray.sort(function (a: PlayerInfo, b: PlayerInfo) {\n      if (a.nom < b.nom) {\n        return -1;\n      }\n      if (a.nom > b.nom) {\n        return 1;\n      }\n      return 0;\n    }\n    );\n  }\n\n\n  convertString(maChaine) {\n    var fixedstring = '';\n    maChaine = maChaine.replace('\"', '').replace('\"', '');\n    try {\n      // If the string is UTF-8, this will work and not throw an error.\n      fixedstring = decodeURIComponent(escape(maChaine));\n    } catch (e) {\n      // If it isn't, an error will be thrown, and we can assume that we have an ISO string.\n      fixedstring = maChaine;\n    }\n    return fixedstring\n  }\n\n\n  removeDouble() {\n    this.tabPlayerInfos = this.getUnique(this.tabPlayerInfos, 'ffgNumber');\n  }\n\n  getUnique(arr, comp) {\n\n    const unique = arr\n      .map(e => e[comp])\n\n      // store the keys of the unique objects\n      .map((e, i, final) => final.indexOf(e) === i && i)\n\n      // eliminate the dead keys & store unique objects\n      .filter(e => arr[e]).map(e => arr[e]);\n\n    return unique;\n  }\n\n  printDiv(divName) {\n    var printContents = document.getElementById(divName).innerHTML;\n    var originalContents = document.body.innerHTML;\n    document.body.innerHTML = printContents;\n    window.print();\n    document.body.innerHTML = originalContents;\n  }\n\n  public emails: string[] = [];\n  getmailList() {\n    this.emails = [];\n    for (var propt in this.tabPlayerInfos) {\n      console.log(propt + ': ' + this.tabPlayerInfos[propt]);\n      this.emails.push(this.tabPlayerInfos[propt].email);\n    }\n\n  }\n\n\n  public isViewInformation: boolean = false;\n  viewAllInformation() {\n    this.isViewInformation = !this.isViewInformation;\n  }\n}","module.exports = \"\"","module.exports = \"<table style=\\\"width: 100%;margin-top: 30px;\\\" *ngIf=\\\"printHeader==true && tabPlayersInfos.length > 0\\\" >\\n  <!-- style=\\\"height:100%; width:100%; margin: 0; padding: 0;\\\" -->\\n  <tbody>\\n    <tr style=\\\"text-align: center;\\\">\\n      <td style=\\\"width: 50%;\\\">&nbsp;<img width=\\\"250\\\" src=\\\"assets/img/logoMistral.png\\\">&nbsp;</td>\\n      <td style=\\\"width: 50%; text-align: center;\\\">\\n        <p><span style=\\\"text-decoration: underline;\\\"><strong> Atelier </strong></span></p>\\n        <p><strong>&nbsp;Stadium&nbsp;</strong> <input id=\\\"scales\\\" name=\\\"scales\\\"\\n            type=\\\"checkbox\\\" />&nbsp;<strong>&nbsp;Putting&nbsp;</strong> <input id=\\\"scales\\\" name=\\\"scales\\\"\\n            type=\\\"checkbox\\\" /></p>\\n        <p><strong>Approche&nbsp;</strong> <input id=\\\"scales\\\" name=\\\"scales\\\"\\n            type=\\\"checkbox\\\" />&nbsp;<strong>&nbsp;Trackman&nbsp;</strong> <input id=\\\"scales\\\" name=\\\"scales\\\"\\n            type=\\\"checkbox\\\" /></p>\\n      </td>\\n    </tr>\\n    <tr>\\n      <td colspan=\\\"2\\\">&nbsp;</td>\\n    </tr>\\n  </tbody>\\n</table>\\n\\n<table style=\\\"width: 90%; margin-left: auto; margin-right: auto;\\\" *ngIf=\\\"tabPlayersInfos.length > 0\\\">\\n    <tbody>\\n         <tr style=\\\"border:1px solid black;text-align: center;\\\">\\n             <th style=\\\"border:1px solid black ; text-align: center;\\\">U{{ currentcategorie}}</th>\\n             <th style=\\\"border:1px solid black; text-align: center;\\\" colspan=\\\"3\\\">Score</th>\\n             <th style=\\\"border:1px solid black; text-align: center;\\\">Classement</th>\\n         </tr>\\n         <tr *ngFor=\\\"let hero of tabPlayersInfos\\\" \\n             [attr.id]=\\\"hero.ffgNumber\\\"\\n             style=\\\"border:1px solid black\\\">\\n           <td style=\\\"border:1px solid black; width: 40%;\\\" >&nbsp;{{hero.nom}} {{hero.prenom}}&nbsp;</td>\\n           <td style=\\\"border:1px solid black; width: 15%;\\\">&nbsp;&nbsp;</td>\\n           <td style=\\\"border:1px solid black; width: 15%;\\\">&nbsp;&nbsp;</td>\\n           <td style=\\\"border:1px solid black; width: 15%\\\">&nbsp;&nbsp;</td>\\n           <td style=\\\"border:1px solid black; width: 20%;\\\">&nbsp;&nbsp;</td>\\n         </tr>\\n         <tr>\\n            <td style=\\\"width: 40%;\\\" >&nbsp;&nbsp;</td>\\n            <td style=\\\"width: 15%;\\\">&nbsp;&nbsp;</td>\\n            <td style=\\\"width: 15%;\\\">&nbsp;&nbsp;</td>\\n            <td style=\\\"width: 15%\\\">&nbsp;&nbsp;</td>\\n            <td style=\\\"width: 20%;\\\">&nbsp;&nbsp;</td>\\n         </tr>\\n<!-- {{controleDivPosition('printableArea1', hero.ffgNumber)}} -->\\n   </tbody>\\n\\n </table>  \"","import { Component, OnInit,Input } from '@angular/core';\nimport { DOCUMENT } from '@angular/platform-browser';\nimport { Inject} from \"@angular/core\";\nimport { PlayerInfo } from '../models/player-info.model'\n@Component({\n  selector: 'app-header-tableau',\n  templateUrl: './header-tableau.component.html',\n  styleUrls: ['./header-tableau.component.css']\n})\nexport class HeaderTableauComponent implements OnInit {\n\n  @Input() currentcategorie: number;\n  @Input() tabPlayersInfos: PlayerInfo[] = [];\n  @Input() printHeader: boolean = false;\n  @Input() printAreaBottom: number ;\n  \n  constructor(@Inject(DOCUMENT) private document: Document) { }\n\n  ngOnInit() {\n  }\n\n\n  /*controleDivPosition (tdName) : boolean{\n    //var parentDiv = this.document.getElementById(divName);\n    var childrenDiv = this.document.getElementById(tdName);\n    //var test1 = parentDiv.getBoundingClientRect();\n    var test2 = childrenDiv.getBoundingClientRect();\n    if( (this.printAreaBottom - 50) - test2.bottom  < 0 ){\n      console.log('la div est hors zone :' + tdName)\n      return false;\n    }else{\n      console.log('controleDivPosition :' + tdName)\n      console.log('test2.bottom :' + test2.bottom)\n      return true;\n      \n    }\n  };*/\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  <strong>home page</strong> works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"/* Bordered form */\\nform {\\n    border: 3px solid #f1f1f1;\\n  }\\n/* Full-width inputs */\\ninput[type=text], input[type=password] {\\n    width: 100%;\\n    padding: 12px 20px;\\n    margin: 8px 0;\\n    display: inline-block;\\n    border: 1px solid #ccc;\\n    box-sizing: border-box;\\n  }\\n/* Set a style for all buttons */\\nbutton {\\n    background-color: darkblue;\\n    color: white;\\n    padding: 14px 20px;\\n    margin: 8px 0;\\n    border: none;\\n    cursor: pointer;\\n    width: 100%;\\n  }\\n/* Add a hover effect for buttons */\\nbutton:hover {\\n    opacity: 0.8;\\n  }\\n/* Extra style for the cancel button (red) */\\n.cancelbtn {\\n    width: auto;\\n    padding: 10px 18px;\\n    background-color: #f44336;\\n  }\\n/* Center the avatar image inside this container */\\n.imgcontainer {\\n    text-align: center;\\n    margin: 24px 0 12px 0;\\n  }\\n/* Avatar image */\\nimg.avatar {\\n    width: 40%;\\n    border-radius: 50%;\\n  }\\n/* Add padding to containers */\\n.container {\\n    padding: 16px;\\n  }\\n/* The \\\"Forgot password\\\" text */\\nspan.psw {\\n    float: right;\\n    padding-top: 16px;\\n  }\\n/* Change styles for span and cancel button on extra small screens */\\n@media screen and (max-width: 300px) {\\n    span.psw {\\n      display: block;\\n      float: none;\\n    }\\n    .cancelbtn {\\n      width: 100%;\\n    }\\n  }\"","module.exports = \"<div *ngIf=\\\"isLoggedIn; else loggedOut\\\">\\n  Logged in as {{role}}.\\n</div>\\n\\n<ng-template #loggedOut>\\n\\n  \\n    <div class=\\\"container\\\">\\n      <label for=\\\"username\\\"><b>Username</b></label>\\n      <input type=\\\"text\\\" placeholder=\\\"Enter Username\\\" name=\\\"username\\\" required>\\n  \\n      <label for=\\\"password\\\"><b>Password</b></label>\\n      <input type=\\\"password\\\" placeholder=\\\"Enter Password\\\" name=\\\"password\\\" required>\\n  \\n      <!-- <button type=\\\"submit\\\">Login</button> -->\\n      <button class=\\\"btn btn-primary\\\" (click)=\\\"verfiyLogin()\\\">Login as Admin</button>\\n      <label>\\n        <input type=\\\"checkbox\\\" checked=\\\"checked\\\" name=\\\"remember\\\"> Remember me\\n      </label>\\n    </div>\\n   \\n\\n  <!-- <button class=\\\"btn btn-secondary\\\" (click)=\\\"loginUser()\\\">Login as User</button>\\n  <button class=\\\"btn btn-primary\\\" (click)=\\\"loginAdmin()\\\">Login as Admin</button>\\n  <hr />\\n  <p>Don't have an account?</p>\\n  <a href=\\\"signup\\\" class=\\\"btn btn-success\\\">Sign Up</a> -->\\n</ng-template>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { NavbarService } from '../services/navbar.service';\nimport { AuthenticationService } from '../services/authentication.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  isLoggedIn = false;\n  role = '';\n\n  public username :string = undefined;\n  public password :string = undefined;\n\n  constructor(private navbarService: NavbarService, private authenticationService: AuthenticationService) {\n    this.navbarService.getLoginStatus().subscribe(status => this.isLoggedIn = status);\n\n  }\n\n  ngOnInit() {\n  }\n\n  verfiyLogin() {\n    this.loginAdmin();\n    /*if (this.authenticationService.verification(this.username, this.password)) {\n      this.loginAdmin();\n    } else{\n      this.loginUser()\n    }*/\n\n  }\n  \n  loginUser() {\n    this.navbarService.updateNavAfterAuth('user');\n    this.navbarService.updateLoginStatus(true);\n    this.role = 'user';\n  }\n\n  loginAdmin() {\n    this.navbarService.updateNavAfterAuth('admin');\n    this.navbarService.updateLoginStatus(true);\n    this.role = 'admin';\n  }\n}\n","\nexport class PlayerInfo {\n    ffgNumber: string;\n    prenom: string;\n    nom: string;\n    circuit: string;\n    categorie: number;\n    nbrRoundThisYear: string;\n    email: string;\n    phoneNumber: string;\n    comment: string;\n    date: string;\n\n    public build(ffgNumber, prenom, nom, circuit, categorie, nbrRoundThisYear, email, phoneNumber, comment, date): PlayerInfo {\n        return  new PlayerInfo()\n                    .setFfgNumber(ffgNumber)\n                    .setPrenon(prenom)\n                    .setNom(nom)\n                    .setCircuit(circuit)\n                    .setCategorie(categorie)\n                    .setNbrRoundThisYear(nbrRoundThisYear)\n                    .setEmail(email)\n                    .setPhoneNumber(phoneNumber)\n                    .setComment(comment)\n                    .setDate(date)\n                    ;\n    }\n\n    public setDate(date): PlayerInfo {\n        this.date = date;\n        return this;\n    }\n\n    public setComment(comment): PlayerInfo {\n        this.comment = comment;\n        return this;\n    }\n\n    public setPhoneNumber(phoneNumber): PlayerInfo {\n        this.phoneNumber = phoneNumber;\n        return this;\n    }\n\n    public setEmail(email): PlayerInfo {\n        this.email = email;\n        return this;\n    }\n\n    public setFfgNumber(ffgNumber): PlayerInfo {\n        this.ffgNumber = ffgNumber;\n        return this;\n    }\n\n    public setPrenon(prenom): PlayerInfo {\n        this.prenom = prenom;\n        return this;\n    }\n\n    public setNom(nom): PlayerInfo {\n        this.nom = nom;\n        return this;\n    }\n\n    public setCircuit(circuit): PlayerInfo {\n        this.circuit = circuit;\n        return this;\n    }\n\n    public setCategorie(categorie): PlayerInfo {\n        this.categorie = categorie;\n        return this;\n    }\n\n    public setNbrRoundThisYear(nbrRoundThisYear): PlayerInfo {\n        this.nbrRoundThisYear = nbrRoundThisYear;\n        return this;\n    }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { NavbarService } from '../services/navbar.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n  isLoggedIn = false;\n  role = '';\n  \n  constructor(private navbarService: NavbarService) {\n    this.navbarService.getLoginStatus().subscribe(status => this.isLoggedIn = status);\n  }\n\n  verification(user :string, password :string): boolean {\n    if (user==\"btmistram\" && password==\"root\"){\n      return true\n    }\n    return false\n  }\n\n  loginUser() {\n    this.navbarService.updateNavAfterAuth('user');\n    this.navbarService.updateLoginStatus(true);\n    this.role = 'user';\n  }\n\n  loginAdmin() {\n    this.navbarService.updateNavAfterAuth('admin');\n    this.navbarService.updateLoginStatus(true);\n    this.role = 'admin';\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NavbarService {\n\n  private links = new Array<{ text: string, path: string }>();\n  private isLoggedIn = new Subject<boolean>();\n\n  constructor() {\n    //this.addItem({ text: 'Login', path: 'login' });\n    this.isLoggedIn.next(false);\n  }\n\n  getLinks() {\n    return this.links;\n  }\n\n  getLoginStatus() {\n    return this.isLoggedIn;\n  }\n\n  updateLoginStatus(status: boolean) {\n    this.isLoggedIn.next(status);\n\n    if (!status) {\n      this.clearAllItems();\n      //this.addItem({ text: 'Login', path: 'login' });\n    }\n  }\n\n  updateNavAfterAuth(role: string): void {\n    //this.removeItem({ text: 'Login' });\n\n    if (role === 'user') {\n      this.addItem({ text: 'User Board', path: 'user' });\n    } else if (role === 'admin') {\n      this.addItem({ text: 'Admin Board', path: 'admin' });\n      this.addItem({ text: 'Atelier', path: 'atelier' });\n    }\n  }\n\n  addItem({ text, path }) {\n    this.links.push({ text: text, path: path });\n  }\n\n  removeItem({ text }) {\n    this.links.forEach((link, index) => {\n      if (link.text === text) {\n        this.links.splice(index, 1);\n      }\n    });\n  }\n\n  clearAllItems() {\n    this.links.length = 0;\n  }\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  <strong>USER page</strong> works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}