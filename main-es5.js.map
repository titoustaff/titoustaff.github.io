{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/_modules/admin/admin.component.ts","webpack:///src/app/_modules/admin/admin.component.html","webpack:///src/app/_modules/atelier/atelier.component.ts","webpack:///src/app/_modules/atelier/atelier.component.html","webpack:///src/app/_modules/header-tableau/header-tableau.component.ts","webpack:///src/app/_modules/header-tableau/header-tableau.component.html","webpack:///src/app/_modules/home/home.component.ts","webpack:///src/app/_modules/home/home.component.html","webpack:///src/app/_modules/login/login.component.ts","webpack:///src/app/_modules/login/login.component.html","webpack:///src/app/_modules/user/user.component.ts","webpack:///src/app/_modules/user/user.component.html","webpack:///src/app/_shared/models/player-info.model.ts","webpack:///src/app/_shared/services/authentication.service.ts","webpack:///src/app/_shared/services/navbar.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AdminComponent","selector","templateUrl","styleUrls","AtelierComponent","document","router","tabPlayerInfos","categorie","startCategorie","sliceValue","logo","step","nbElementTab","tabPlayerInfosList1","tabPlayerInfosList2","tabPlayerInfosList3","tabPlayerInfosList4","tabPlayerInfosList5","tabPlayerInfosList6","emails","isViewInformation","arrayList","listeElementTraiter","getElementListByCategorie","nbElementTraiter","length","iterableNumber","nbElementTotalTraiter","currentCategorie","console","log","value","splitted","split","splitted2","shift","i","data","undefined","push","build","convertString","stringToLowerCase","stringReplaceSpecial","stringToUpperCase","fileReader","FileReader","onload","readFileToarray","result","readAsText","files","uploadThisDocument","item","maChaine","replace","toLowerCase","nameCapitalized","charAt","toUpperCase","slice","listeArray","filter","Number","u16","u16T","sortByName","u14","u14T","u12","u12N","u12T","sortByGenre","u10","u10N","u10T","u8","u8T","nexTab","Array","prototype","apply","temporytabPlayerInfos","calculeNumber","calculeNumber2","sort","a","b","nom","civilite","fixedstring","decodeURIComponent","escape","getUnique","arr","comp","unique","map","final","indexOf","divName","printContents","getElementById","innerHTML","originalContents","body","window","print","location","reload","propt","email","handleFileInput2","removeDouble","onClickMe","docuReload","getmailList","viewAllInformation","prePrintDiv","printDiv","Document","HeaderTableauComponent","tabPlayersInfos","printHeader","trim","input","re","cleanString","HomeComponent","LoginComponent","navbarService","authenticationService","isLoggedIn","role","username","password","getLoginStatus","subscribe","status","loginAdmin","updateNavAfterAuth","updateLoginStatus","UserComponent","PlayerInfo","ffgNumber","prenom","circuit","nbrRoundThisYear","phoneNumber","comment","date","setFfgNumber","setPrenon","setNom","setCircuit","setCivilite","setCategorie","setNbrRoundThisYear","setEmail","setPhoneNumber","setComment","setDate","AuthenticationService","user","providedIn","NavbarService","links","next","clearAllItems","addItem","text","path","forEach","link","index","splice","routes","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","title","logged","config","unshift","getLinks","navigate","verification","alert","AppModule","declarations","providers","bootstrap","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>admin works!</p>\n","import { Component, OnInit, ɵConsole } from '@angular/core';\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { Inject } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { PlayerInfo } from '../../_shared/models/player-info.model';\nimport {DOCUMENT} from '@angular/common';\n@Component({\n  selector: 'app-atelier',\n  templateUrl: './atelier.component.html',\n  styleUrls: ['./atelier.component.css']\n})\nexport class AtelierComponent implements OnInit {\n  constructor(@Inject(DOCUMENT) private document: Document, private router: Router) { }\n\n  public tabPlayerInfos: PlayerInfo[] = [];\n  public categorie: number[] = [16, 14, 12, 10, 8];\n\n  public startCategorie = 16;\n  public sliceValue = 0;\n  public logo = 'logoMistral.png';\n  public step = 'view';\n  public nbElementTab = 35;\n\n  public tabPlayerInfosList1: PlayerInfo[] = [];\n  public tabPlayerInfosList2: PlayerInfo[] = [];\n  public tabPlayerInfosList3: PlayerInfo[] = [];\n  public tabPlayerInfosList4: PlayerInfo[] = [];\n  public tabPlayerInfosList5: PlayerInfo[] = [];\n  public tabPlayerInfosList6: PlayerInfo[] = [];\n\n  public emails: string[] = [];\n\n  public isViewInformation = false;\n\n  ngOnInit() {\n\n  }\n\n  reloadComponent() { }\n\n\n  defineTheContexte(categorie: number, arrayList: PlayerInfo[]) {\n    const listeElementTraiter = this.getElementListByCategorie(categorie, arrayList);\n    const nbElementTraiter = listeElementTraiter.length;\n    let iterableNumber = 0;\n    let nbElementTotalTraiter = 0;\n    while (this.categorie[iterableNumber] >= categorie) {\n      const currentCategorie = this.categorie[iterableNumber];\n      nbElementTotalTraiter = nbElementTotalTraiter + this.getElementListByCategorie(currentCategorie, arrayList).length;\n      iterableNumber++;\n    }\n    if ((nbElementTotalTraiter + nbElementTraiter) > this.nbElementTab) {\n      this.startCategorie = categorie;\n      console.log('RAS A FAIRE categorie = ' + categorie);\n    } else {\n      if (nbElementTotalTraiter > 0) { this.sliceValue = this.sliceValue + 1; }\n    }\n\n  }\n\n  defineifHeader(categorie: number, arrayList: PlayerInfo[]) {\n    if (arrayList.length > 0 && arrayList[0].categorie == categorie) { return true; }\n  }\n\n  /* read the current file of select file on liste */\n  readFileToarray(value) {\n\n    const splitted = value.split('\\n');\n    const splitted2 = splitted.shift();\n\n    // tslint:disable-next-line:prefer-for-of\n    for (let i = 0; i < splitted.length; i++) {\n      // split content based on comma\n      const data = splitted[i].split(';');\n      // tslint:disable-next-line:triple-equals\n      if (data != undefined && data[0] != undefined && data[0].length > 2) {\n        this.tabPlayerInfos.push(new PlayerInfo()\n          .build(this.convertString(data[0]),\n            this.convertString(this.stringToLowerCase(this.stringReplaceSpecial(data[1]))),\n            this.convertString(this.stringToUpperCase(this.stringReplaceSpecial(data[2]))),\n            this.convertString(data[3]),\n            this.convertString(data[4]),\n            this.convertString(data[5]),\n            this.convertString(data[6]),\n            this.convertString(data[7]),\n            this.convertString(data[8]),\n            this.convertString(data[9]),\n            this.convertString(data[10])));\n      }\n    }\n  }\n\n  uploadThisDocument(document) {\n    const fileReader = new FileReader();\n    fileReader.onload = (e) => {\n      this.readFileToarray(fileReader.result);\n    };\n    fileReader.readAsText(document, 'ISO-8859-1');\n  }\n\n  handleFileInput2(files: FileList) {\n    for (let i = 0; i < files.length; i++) {\n      this.uploadThisDocument(files.item(i));\n    }\n  }\n\n  /* force replace encoding error */\n  stringReplaceSpecial(maChaine: string): string {\n\n    if (maChaine) {\n      maChaine = maChaine.replace('�', 'é');\n    }\n    return maChaine;\n  }\n\n  /* capitablise string parameter */\n  stringToLowerCase(maChaine): string {\n    if (maChaine) {\n      maChaine = maChaine.toLowerCase();\n      const nameCapitalized = maChaine.charAt(0).toUpperCase() + maChaine.slice(1);\n      return nameCapitalized;\n    }\n    return maChaine;\n  }\n\n  /* uppercas string parameter */\n  stringToUpperCase(maChaine): string {\n    if (maChaine) {\n      const nameCapitalized = maChaine.toUpperCase();\n      return nameCapitalized;\n    }\n    return maChaine;\n  }\n\n  getElementListByCategorie(categorie: number, listeArray): PlayerInfo[] {\n    return listeArray.filter( function(item: PlayerInfo): boolean {\n      if (Number(item.categorie) === Number(categorie)) {\n        return true;\n      }\n      return false;\n    });\n  }\n\n  /* sort string function and split array */\n  onClickMe() {\n\n    const u16: PlayerInfo[] = this.getElementListByCategorie(16, this.tabPlayerInfos);\n    const u16T = this.sortByName(u16);\n\n    const u14: PlayerInfo[] = this.getElementListByCategorie(14, this.tabPlayerInfos);\n    const u14T = this.sortByName(u14);\n\n    const u12: PlayerInfo[] = this.getElementListByCategorie(12, this.tabPlayerInfos);\n    const u12N = this.sortByName(u12);\n    const u12T = this.sortByGenre(u12N);\n\n    const u10: PlayerInfo[] = this.getElementListByCategorie(10, this.tabPlayerInfos);\n    const u10N = this.sortByName(u10);\n    const u10T = this.sortByGenre(u10N);\n\n    const u8: PlayerInfo[] = this.getElementListByCategorie(8, this.tabPlayerInfos);\n    const u8T = this.sortByName(u8);\n\n    const nexTab: PlayerInfo[] = [];\n    Array.prototype.push.apply(nexTab, u16T);\n    Array.prototype.push.apply(nexTab, u14T);\n    Array.prototype.push.apply(nexTab, u12T);\n    Array.prototype.push.apply(nexTab, u10T);\n    Array.prototype.push.apply(nexTab, u8T);\n    this.tabPlayerInfos = nexTab;\n\n    // split array value\n    const temporytabPlayerInfos = this.tabPlayerInfos;\n    let calculeNumber = 0;\n    let calculeNumber2 = calculeNumber + this.nbElementTab;\n    this.tabPlayerInfosList1 = this.tabPlayerInfos.slice(calculeNumber, calculeNumber2);\n    calculeNumber = calculeNumber2;\n    calculeNumber2 = calculeNumber + this.nbElementTab;\n    this.tabPlayerInfosList2 = this.tabPlayerInfos.slice(calculeNumber, calculeNumber2);\n    calculeNumber = calculeNumber2;\n    calculeNumber2 = calculeNumber + this.nbElementTab;\n    this.tabPlayerInfosList3 = this.tabPlayerInfos.slice(calculeNumber, calculeNumber2);\n    calculeNumber = calculeNumber2;\n    calculeNumber2 = calculeNumber + this.nbElementTab;\n    this.tabPlayerInfosList4 = this.tabPlayerInfos.slice(calculeNumber, calculeNumber2);\n    calculeNumber = calculeNumber2;\n    calculeNumber2 = calculeNumber + this.nbElementTab;\n    this.tabPlayerInfosList5 = this.tabPlayerInfos.slice(calculeNumber, calculeNumber2);\n    calculeNumber = calculeNumber2;\n    calculeNumber2 = calculeNumber + this.nbElementTab;\n  }\n\n  sortByName(listeArray: PlayerInfo[]): PlayerInfo[] {\n    // tslint:disable-next-line:only-arrow-functions\n    return listeArray.sort(function(a: PlayerInfo, b: PlayerInfo) {\n        if (a.nom < b.nom) {\n          return -1;\n        }\n        if (a.nom > b.nom) {\n          return 1;\n        }\n        return 0;\n      }\n    );\n  }\n\n  sortByGenre(listeArray: PlayerInfo[]): PlayerInfo[] {\n    // tslint:disable-next-line:only-arrow-functions\n    return listeArray.sort(function(a: PlayerInfo, b: PlayerInfo) {\n          if (a.civilite < b.civilite) {\n            return -1;\n          }\n          if (a.civilite > b.civilite) {\n            return 1;\n          }\n          return 0;\n        }\n    );\n  }\n\n\n\n\n  convertString(maChaine) {\n    let fixedstring = '';\n    if (maChaine && maChaine.length > 0) {\n      maChaine = maChaine.replace('\"', '').replace('\"', '');\n      try {\n        // If the string is UTF-8, this will work and not throw an error.\n        fixedstring = decodeURIComponent(escape(maChaine));\n      } catch (e) {\n        // If it isn't, an error will be thrown, and we can assume that we have an ISO string.\n        fixedstring = maChaine;\n      }\n    }\n    return fixedstring;\n  }\n\n\n  removeDouble() {\n    this.tabPlayerInfos = this.getUnique(this.tabPlayerInfos, 'ffgNumber');\n  }\n\n  getUnique(arr, comp) {\n    const unique = arr\n      .map(e => e[comp])\n      // store the keys of the unique objects\n      .map((e, i, final) => final.indexOf(e) === i && i)\n      // eliminate the dead keys & store unique objects\n      .filter(e => arr[e]).map(e => arr[e]);\n    return unique;\n  }\n\n  printDiv(divName) {\n    this.step = 'print';\n    const printContents = document.getElementById(divName).innerHTML;\n    const originalContents = document.body.innerHTML;\n    document.body.innerHTML = printContents;\n    window.print();\n    document.body.innerHTML = originalContents;\n\n  }\n\n\n  goToHome() {\n\n\n  }\n\n\n\n\n  docuReload() {\n    window.location.reload(true);\n\n    /*this.router.routeReuseStrategy.shouldReuseRoute = function () {\n      return false;\n    };*/\n    // this.router.navigate(['atelier']);\n\n  }\n\n  reloadDIV() {\n    // document.getElementById(\"printableArea0\").innerHTML.reload();\n  }\n\n  prePrintDiv() {\n\n    if (this.step === 'print') {\n      this.step = 'view';\n    } else {\n      this.step = 'print';\n    }\n\n  }\n\n  getmailList() {\n    if (this.emails.length > 0) {\n      this.emails = [];\n    } else {\n      // tslint:disable-next-line:forin\n      for (const propt in this.tabPlayerInfos) {\n        console.log(propt + ': ' + this.tabPlayerInfos[propt]);\n        this.emails.push(this.tabPlayerInfos[propt].email);\n      }\n    }\n\n\n  }\n  viewAllInformation() {\n    this.isViewInformation = !this.isViewInformation;\n  }\n\n}\n","<div style=\"margin: 30px 30px 30px 30px\">\n  <h1>Impression des cartes atelier</h1>\n</div>\n<hr>\n<div style=\"margin: 30px 30px 30px 30px\">\n  <div id=\"fichier\">Fichiers BFGT :&nbsp;</div>\n  <div id=\"fichier\"><input type=\"file\" name=\"img\" (change)=\"handleFileInput2($event.target.files)\" multiple></div>\n  <div id=\"fichier\">&nbsp;Nombre de fiches joueur : {{tabPlayerInfos?.length}} &nbsp;</div>\n  <div id=\"fichier\">\n    <input type=\"number\" id=\"tentacles\" name=\"tentacles\" min=\"1\" max=\"1000\" [(ngModel)]=\"nbElementTab\">\n  </div>\n</div>\n<div style=\"clear: both\"></div>\n<br>\n<div style=\"clear: both\"></div>\n<div style=\"clear: both\"></div>\n\n<div style=\"margin: 30px 30px 30px 30px\">\n  <div id=\"fichier\">\n    <button (click)=\"removeDouble()\">Suppression des doubles par N°license</button>&nbsp;\n  </div>\n  <div id=\"fichier\">\n    <button (click)=\"onClickMe()\">Edition du document par catégorie d'age !</button>&nbsp;\n  </div>\n  <div id=\"fichier\">\n    <button (click)=\"docuReload()\">Raz de la page</button>&nbsp;\n  </div>\n\n  <div id=\"fichier\">\n    <select id=\"logo\" [(ngModel)]=\"logo\">\n      <option value=\"logoBFGT.png\">BFGT</option>\n      <option value=\"logoMistral.png\">BFGTMistral</option>\n      <option value=\"logoOccitanie.png\">BFGTOccitanie(bleu)</option>\n      <option value=\"logoOccitanie.jpg\">BFGTOccitanie(blanc)</option>\n    </select>\n  </div>\n</div>\n<div style=\"clear: both\"></div>\n<br>\n\n<div style=\"margin: 30px 30px 30px 30px\">\n  <div id=\"fichier\">\n    <button (click)=\"getmailList()\">Liste des e-mails</button>&nbsp;\n  </div>\n  <div id=\"fichier\">\n    <button (click)=\"viewAllInformation()\">Information d'inscription</button>&nbsp;\n  </div>\n  <div id=\"fichier\">\n    <button (click)=\"prePrintDiv()\">bordure impression</button>&nbsp;\n  </div>\n  <div id=\"fichier\">\n    <button (click)=\"printDiv('printableArea0')\">impression</button>&nbsp;\n  </div>\n<!--  <div id=\"fichier\">-->\n<!--    <button routerLink=\"/home\" routerLinkActive=\"active\">Home</button>-->\n<!--  </div>-->\n</div>\n<div style=\"clear: both\"></div>\n<br>\n\n\n<div style=\"margin: 30px 30px 30px 30px\">\n  <textarea rows=\"15\" cols=\"180\" ng *ngIf=\"emails.length > 0\">{{emails?.join('; ')}}</textarea>\n</div>\n\n<div style=\"margin: 30px 30px 30px 30px\">\n  <table *ngIf=\"isViewInformation\" style=\"margin: 30px 0 0 0\">\n    <thead>\n    <tr style=\"border:1px solid black\">\n      <th style=\"border:1px solid black\">N° Licence</th>\n      <th style=\"border:1px solid black\">Prénom</th>\n      <th style=\"border:1px solid black\">Nom</th>\n      <th style=\"border:1px solid black\">G/F</th>\n      <th style=\"border:1px solid black\">Circuit</th>\n      <th style=\"border:1px solid black\">Catégorie</th>\n      <th style=\"border:1px solid black\">Nbr round</th>\n      <th style=\"border:1px solid black\">Email</th>\n      <th style=\"border:1px solid black\">Téléphone</th>\n      <th style=\"border:1px solid black\">Commentaire</th>\n      <th style=\"border:1px solid black\">Date inscription</th>\n    </tr>\n    </thead>\n    <tbody style=\"border:1px solid black\">\n    <tr *ngFor=\"let hero of tabPlayerInfos\" style=\"border:1px solid black\">\n      <td style=\"border:1px solid black\">{{hero.ffgNumber}} &nbsp;</td>\n      <td style=\"border:1px solid black\">{{hero.prenom}}&nbsp;</td>\n      <td style=\"border:1px solid black\">{{hero.nom}}&nbsp;</td>\n      <td style=\"border:1px solid black\">{{hero.civilite}}&nbsp;</td>\n      <td style=\"border:1px solid black\">{{hero.circuit}}&nbsp;</td>\n      <td style=\"border:1px solid black\">{{hero.categorie}}&nbsp;</td>\n      <td style=\"border:1px solid black\">{{hero.nbrRoundThisYear}}&nbsp;</td>\n      <td style=\"border:1px solid black\">{{hero.email}}&nbsp;</td>\n      <td style=\"border:1px solid black\">{{hero.phoneNumber}}&nbsp;</td>\n      <td style=\"border:1px solid black\">{{hero.comment}}&nbsp;</td>\n      <td style=\"border:1px solid black\">{{hero.date}}&nbsp;</td>\n    </tr>\n    </tbody>\n  </table>\n</div>\n\n<div id=\"printableArea0\">\n\n  <div id=\"printableArea1\" [ngClass]=\"{'viewable': step=='view', 'printable':step=='print' }\">\n\n    <div *ngFor=\"let item of categorie\">\n      <app-header-tableau [currentcategorie]=\"item\"\n                          [tabPlayersInfos]=getElementListByCategorie(item,tabPlayerInfosList1)\n                          [printHeader]=defineifHeader(item,tabPlayerInfosList1) [logo]=\"logo\"></app-header-tableau>\n    </div>\n  </div>\n\n\n  <div id=\"printableArea2\" *ngIf=\"tabPlayerInfosList2.length > 0\"\n       [ngClass]=\"{'viewable': step=='view', 'printable':step=='print' }\">\n    <div *ngFor=\"let item of categorie\">\n      <app-header-tableau [currentcategorie]=\"item\"\n                          [tabPlayersInfos]=getElementListByCategorie(item,tabPlayerInfosList2)\n                          [printHeader]=defineifHeader(item,tabPlayerInfosList2) [logo]=\"logo\"></app-header-tableau>\n    </div>\n  </div>\n\n  <div id=\"printableArea3\" *ngIf=\"tabPlayerInfosList3.length > 0\"\n       [ngClass]=\"{'viewable': step=='view', 'printable':step=='print' }\">\n    <div *ngFor=\"let item of categorie\">\n      <app-header-tableau [currentcategorie]=\"item\"\n                          [tabPlayersInfos]=getElementListByCategorie(item,tabPlayerInfosList3)\n                          [printHeader]=defineifHeader(item,tabPlayerInfosList3) [logo]=\"logo\"></app-header-tableau>\n    </div>\n  </div>\n\n  <div id=\"printableArea4\" *ngIf=\"tabPlayerInfosList4.length > 0\"\n       [ngClass]=\"{'viewable': step=='view', 'printable':step=='print' }\">\n    <div *ngFor=\"let item of categorie\">\n      <app-header-tableau [currentcategorie]=\"item\"\n                          [tabPlayersInfos]=getElementListByCategorie(item,tabPlayerInfosList4)\n                          [printHeader]=defineifHeader(item,tabPlayerInfosList4) [logo]=\"logo\"></app-header-tableau>\n    </div>\n  </div>\n\n  <div id=\"printableArea5\" *ngIf=\"tabPlayerInfosList5.length > 0\"\n       [ngClass]=\"{'viewable': step=='view', 'printable':step=='print' }\">\n    <div *ngFor=\"let item of categorie\">\n      <app-header-tableau [currentcategorie]=\"item\"\n                          [tabPlayersInfos]=getElementListByCategorie(item,tabPlayerInfosList5)\n                          [printHeader]=defineifHeader(item,tabPlayerInfosList5) [logo]=\"logo\"></app-header-tableau>\n    </div>\n  </div>\n\n  <div id=\"printableArea6\" *ngIf=\"tabPlayerInfosList6.length > 0\"\n       [ngClass]=\"{'viewable': step=='view', 'printable':step=='print' }\">\n    <div *ngFor=\"let item of categorie\">\n      <app-header-tableau [currentcategorie]=\"item\"\n                          [tabPlayersInfos]=getElementListByCategorie(item,tabPlayerInfosList6)\n                          [printHeader]=defineifHeader(item,tabPlayerInfosList6) [logo]=\"logo\"></app-header-tableau>\n    </div>\n  </div>\n\n</div>\n\n\n<!-- <button (click)=\"printDiv('printableArea3')\">print a div!</button>\n<div id=\"printableArea3\"\n      style=\"width: 210mm; height: 297mm; margin-left: auto;margin-right: auto; border-color: coral; border-style: solid; \">\n\n      <app-header-tableau [currentcategorie]=\"10\"\n                          [printAreaBottom]=div1BottomValue\n                          [tabPlayersInfos]=getElementListByCategorie(10)\n                          [logo]=true></app-header-tableau>\n\n      <app-header-tableau [currentcategorie]=\"8\"\n                          [printAreaBottom]=div1BottomValue\n                          [tabPlayersInfos]=getElementListByCategorie(8)\n                          [logo]=false></app-header-tableau>\n\n\n\n</div>\n\n\n<table>\n    <thead>\n        <tr style=\"border:1px solid black\">\n            <th style=\"border:1px solid black\">N° Licence</th>\n            <th style=\"border:1px solid black\" >Prénom</th>\n            <th style=\"border:1px solid black\">Nom</th>\n            <th style=\"border:1px solid black\">Circuit</th>\n            <th style=\"border:1px solid black\">Catégorie</th>\n            <th style=\"border:1px solid black\">Nbr round</th>\n            <th style=\"border:1px solid black\">Email</th>\n            <th style=\"border:1px solid black\">Téléphone</th>\n            <th style=\"border:1px solid black\">Commentaire</th>\n            <th style=\"border:1px solid black\">Date inscription</th>\n        </tr>\n    </thead>\n    <tbody style=\"border:1px solid black\">\n        <tr *ngFor=\"let hero of tabPlayerInfos\" style=\"border:1px solid black\">\n            <td style=\"border:1px solid black\">{{hero.ffgNumber}} &nbsp;</td>\n            <td style=\"border:1px solid black\">{{hero.prenom}}&nbsp;</td>\n            <td style=\"border:1px solid black\">{{hero.nom}}&nbsp;</td>\n            <td style=\"border:1px solid black\">{{hero.circuit}}&nbsp;</td>\n            <td style=\"border:1px solid black\">{{hero.categorie}}&nbsp;</td>\n            <td style=\"border:1px solid black\">{{hero.nbrRoundThisYear}}&nbsp;</td>\n            <td style=\"border:1px solid black\">{{hero.email}}&nbsp;</td>\n            <td style=\"border:1px solid black\">{{hero.phoneNumber}}&nbsp;</td>\n            <td style=\"border:1px solid black\">{{hero.comment}}&nbsp;</td>\n            <td style=\"border:1px solid black\" >{{hero.date}}&nbsp;</td>\n        </tr>\n    </tbody>\n  </table>\n\n-->\n<!-- <hr>\n\n<hr>\n\n\n<button (click)=\"printDiv('printableArea1')\">print a div!</button>\n<div id=\"printableArea1\"\n      style=\"width: 210mm; height: 297mm; margin-left: auto;margin-right: auto; border-color: coral; border-style: solid; \">\n\n  <table  style=\"width: 100%;margin-top: 30px;\">\n\n    <tbody >\n      <tr style=\"text-align: center;\">\n        <td style=\"width: 50%;\">&nbsp;<img width=\"250\" src=\"assets/img/logoMistral.png\">&nbsp;</td>\n        <td style=\"width: 50%; text-align: center;\">\n            <p><span style=\"text-decoration: underline;\"><strong> Atelier </strong></span></p>\n            <p><strong>&nbsp;Stadium&nbsp;</strong> <input id=\"scales\" name=\"scales\" type=\"checkbox\" />&nbsp;<strong>&nbsp;Putting&nbsp;</strong> <input id=\"scales\" name=\"scales\" type=\"checkbox\" /></p>\n            <p><strong>Approche&nbsp;</strong> <input id=\"scales\" name=\"scales\" type=\"checkbox\" />&nbsp;<strong>&nbsp;Trackman&nbsp;</strong> <input id=\"scales\" name=\"scales\" type=\"checkbox\" /></p>\n        </td>\n      </tr>\n      <tr>\n          <td colspan=\"2\">&nbsp;</td>\n      </tr>\n      <tr>\n      <td colspan=\"2\">\n        <table style=\"width: 90%; margin-left: auto; margin-right: auto;\">\n             <tbody *ngFor=\"let currentCategorie of categorie\">\n\n                  <tr style=\"border:1px solid black;text-align: center;\">\n                      <th style=\"border:1px solid black ; text-align: center;\">U{{ currentCategorie}}</th>\n                      <th style=\"border:1px solid black; text-align: center;\" colspan=\"3\">Score</th>\n                      <th style=\"border:1px solid black; text-align: center;\">Classement</th>\n                  </tr>\n                  <tr *ngFor=\"let hero of getElementListByCategorie(currentCategorie)\"\n                      [attr.id]=\"hero.ffgNumber\"\n                      style=\"border:1px solid black\">\n                    <td style=\"border:1px solid black; width: 40%;\" >&nbsp;{{hero.nom}} {{hero.prenom}}&nbsp;</td>\n                    <td style=\"border:1px solid black; width: 15%;\">&nbsp;&nbsp;</td>\n                    <td style=\"border:1px solid black; width: 15%;\">&nbsp;&nbsp;</td>\n                    <td style=\"border:1px solid black; width: 15%\">&nbsp;&nbsp;</td>\n                    <td style=\"border:1px solid black; width: 20%;\">&nbsp;&nbsp;{{controleDivPosition('printableArea1', hero.ffgNumber)}}</td>\n                  </tr>\n                  <tr>\n                      <td style=\"border:1px solid black;\" colspan=\"5\">&nbsp;</td>\n                  </tr>\n            </tbody>\n\n          </table>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>-->\n","import {Component, Inject, Input, OnInit} from '@angular/core';\nimport {PlayerInfo} from '../../_shared/models/player-info.model';\nimport {DOCUMENT} from '@angular/common';\n\n@Component({\n  selector: 'app-header-tableau',\n  templateUrl: './header-tableau.component.html',\n  styleUrls: ['./header-tableau.component.css']\n})\nexport class HeaderTableauComponent implements OnInit {\n\n  @Input() currentcategorie: number;\n  @Input() tabPlayersInfos: PlayerInfo[] = [];\n  @Input() printHeader = false;\n  @Input() printAreaBottom: number ;\n  @Input() logo: string ;\n\n  constructor(@Inject(DOCUMENT) private document: Document) { }\n\n  ngOnInit() {\n  }\n\n  /* uppercas string parameter */\n  stringToCircuit(maChaine): string {\n    return maChaine.replace('BFGT', 'Découvertes').toLowerCase().replace('bt\\'s', '').trim();\n  }\n\n  cleanString(input): string{\n    const re = /(?![\\x00-\\x7F]|[\\xC0-\\xDF][\\x80-\\xBF]|[\\xE0-\\xEF][\\x80-\\xBF]{2}|[\\xF0-\\xF7][\\x80-\\xBF]{3})./g;\n    return input.replace(re, '');\n  }\n\n  /* uppercas string parameter */\n  stringToNom(maChaine): string {\n    return this.cleanString(maChaine).toLowerCase()\n                  .replace('?', '-')\n                  .replace('- -', '-')\n                  .replace('�', '').trim();\n  }\n\n\n\n}\n","<table style=\"width: 100%;margin-top: 30px;\" *ngIf=\"printHeader==true && tabPlayersInfos.length > 0\" >\n  <!-- style=\"height:100%; width:100%; margin: 0; padding: 0;\" -->\n  <tbody>\n  <tr style=\"text-align: center;\">\n    <td style=\"width: 50%;\">&nbsp;<img width=\"250\" src=\"assets/img/{{logo}}\">&nbsp;</td>\n    <td style=\"width: 50%; text-align: center;\">\n      <p><span style=\"text-decoration: underline;\"><strong> Atelier </strong></span></p>\n      <p>\n        <strong>&nbsp;Stadium&nbsp;</strong><input id=\"scales\" name=\"scales\" type=\"checkbox\" />&nbsp;\n        <strong>&nbsp;Putting&nbsp;</strong><input id=\"scales\" name=\"scales\" type=\"checkbox\" />\n      </p>\n      <p>\n        <strong>Approche&nbsp;</strong><input id=\"scales\" name=\"scales\" type=\"checkbox\" />&nbsp;\n        <strong>&nbsp;Trackman&nbsp;</strong><input id=\"scales\" name=\"scales\" type=\"checkbox\" /></p>\n    </td>\n  </tr>\n  <tr>\n    <td colspan=\"2\">&nbsp;</td>\n  </tr>\n  </tbody>\n</table>\n\n<table style=\"width: 90%; margin-left: auto; margin-right: auto;\" *ngIf=\"tabPlayersInfos.length > 0\">\n  <tbody>\n  <tr style=\"border:1px solid black;text-align: center;\">\n    <th style=\"border:1px solid black ; text-align: center; text-transform: capitalize; \" colspan=\"2\">U{{ currentcategorie}}</th>\n    <th style=\"border:1px solid black ; text-align: center; text-transform: capitalize;\">circuit</th>\n    <th style=\"border:1px solid black; text-align: center; text-transform: capitalize;\" colspan=\"10\">Score</th>\n    <th style=\"border:1px solid black; text-align: center; text-transform: capitalize;\">Total</th>\n    <th style=\"border:1px solid black; text-align: center; text-transform: capitalize;\">Classement</th>\n  </tr>\n  <tr *ngFor=\"let hero of tabPlayersInfos\"\n      [attr.id]=\"hero.ffgNumber\"\n      style=\"border:1px solid black\">\n\n        <td style=\"border:1px solid black; width: 27%; text-transform: capitalize;\" >&nbsp;{{stringToNom(hero.nom)}} {{hero.prenom}}&nbsp;</td>\n        <td style=\"border:1px solid black; text-align: center; text-transform: capitalize; width: 3%; ;\">{{hero.civilite}}</td>\n        <td style=\"border:1px solid black; text-transform: capitalize; width: 10%;\" >&nbsp;{{stringToCircuit(hero.circuit)}}&nbsp;</td>\n        <td style=\"border:0.1em dashed ; #EFEFEF; width: 3%;\">&nbsp;&nbsp;</td>\n        <td style=\"border:0.1em dashed ; #EFEFEF; width: 3%;\">&nbsp;&nbsp;</td>\n        <td style=\"border:0.1em dashed ; #EFEFEF; width: 3%\">&nbsp;&nbsp;</td>\n        <td style=\"border:0.1em dashed ; #EFEFEF; width: 3%;\">&nbsp;&nbsp;</td>\n        <td style=\"border:0.1em dashed ; #EFEFEF; width: 3%;\">&nbsp;&nbsp;</td>\n        <td style=\"border:0.1em dashed ; #EFEFEF; width: 3%\">&nbsp;&nbsp;</td>\n        <td style=\"border:0.1em dashed ; #EFEFEF; width: 3%;\">&nbsp;&nbsp;</td>\n        <td style=\"border:0.1em dashed ; #EFEFEF; width: 3%;\">&nbsp;&nbsp;</td>\n        <td style=\"border:0.1em dashed ; #EFEFEF; width: 3%\">&nbsp;&nbsp;</td>\n        <td style=\"border:0.1em dashed ; #EFEFEF; width: 3%\">&nbsp;&nbsp;</td>\n        <td style=\"border:1px solid black; width: 7%\">&nbsp;&nbsp;</td>\n        <td style=\"border:1px solid black; width: 11%;\">&nbsp;&nbsp;</td>\n  </tr>\n  <tr>\n    <td style=\"width: 27%;\" >&nbsp;&nbsp;</td>\n    <td style=\"width: 3%;\" >&nbsp;&nbsp;</td>\n    <td style=\"width: 10%;\">&nbsp;&nbsp;</td>\n    <td style=\"width: 3%;\">&nbsp;&nbsp;</td>\n    <td style=\"width: 3%;\">&nbsp;&nbsp;</td>\n    <td style=\"width: 3%\">&nbsp;&nbsp;</td>\n    <td style=\"width: 3%\">&nbsp;&nbsp;</td>\n    <td style=\"width: 3%\">&nbsp;&nbsp;</td>\n    <td style=\"width: 3%\">&nbsp;&nbsp;</td>\n    <td style=\"width: 3%\">&nbsp;&nbsp;</td>\n    <td style=\"width: 3%\">&nbsp;&nbsp;</td>\n    <td style=\"width: 3%\">&nbsp;&nbsp;</td>\n    <td style=\"width: 3%\">&nbsp;&nbsp;</td>\n    <td style=\"width: 7%\">&nbsp;&nbsp;</td>\n    <td style=\"width: 11%;\">&nbsp;&nbsp;</td>\n  </tr>\n\n  <!-- {{controleDivPosition('printableArea1', hero.ffgNumber)}} -->\n  </tbody>\n\n</table>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>home works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport {NavbarService} from '../../_shared/services/navbar.service';\nimport {AuthenticationService} from '../../_shared/services/authentication.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  isLoggedIn = false;\n  role = '';\n\n  public username: string = undefined;\n  public password: string = undefined;\n\n  constructor(private navbarService: NavbarService, private authenticationService: AuthenticationService) {\n    this.navbarService.getLoginStatus().subscribe(status => this.isLoggedIn = status);\n\n  }\n\n  ngOnInit() {\n  }\n\n  verfiyLogin() {\n    this.loginAdmin();\n  }\n\n  loginUser() {\n    this.navbarService.updateNavAfterAuth('user');\n    this.navbarService.updateLoginStatus(true);\n    this.role = 'user';\n  }\n\n  loginAdmin() {\n    this.navbarService.updateNavAfterAuth('admin');\n    this.navbarService.updateLoginStatus(true);\n    this.role = 'admin';\n  }\n\n}\n","<div *ngIf=\"isLoggedIn; else loggedOut\">\n  Logged in as {{role}}.\n</div>\n\n<ng-template #loggedOut>\n\n\n  <div class=\"container\">\n    <label for=\"username\"><b>Username</b></label>\n    <input type=\"text\" placeholder=\"Enter Username\" name=\"username\" required>\n\n    <label for=\"password\"><b>Password</b></label>\n    <input type=\"password\" placeholder=\"Enter Password\" name=\"password\" required>\n\n    <!-- <button type=\"submit\">Login</button> -->\n    <button class=\"btn btn-primary\" (click)=\"verfiyLogin()\">Login as Admin</button>\n    <label>\n      <input type=\"checkbox\" checked=\"checked\" name=\"remember\"> Remember me\n    </label>\n  </div>\n\n\n  <!-- <button class=\"btn btn-secondary\" (click)=\"loginUser()\">Login as User</button>\n  <button class=\"btn btn-primary\" (click)=\"loginAdmin()\">Login as Admin</button>\n  <hr />\n  <p>Don't have an account?</p>\n  <a href=\"signup\" class=\"btn btn-success\">Sign Up</a> -->\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>user works!</p>\n","\nexport class PlayerInfo {\n    ffgNumber: string;\n    prenom: string;\n    nom: string;\n    circuit: string;\n    civilite: string;\n    categorie: number;\n    nbrRoundThisYear: string;\n    email: string;\n    phoneNumber: string;\n    comment: string;\n    date: string;\n\n    public build(ffgNumber, prenom, nom, civilite, circuit,  categorie, nbrRoundThisYear, email, phoneNumber, comment, date): PlayerInfo {\n        return  new PlayerInfo()\n                    .setFfgNumber(ffgNumber)\n                    .setPrenon(prenom)\n                    .setNom(nom)\n                    .setCircuit(circuit)\n                    .setCivilite(civilite)\n                    .setCategorie(categorie)\n                    .setNbrRoundThisYear(nbrRoundThisYear)\n                    .setEmail(email)\n                    .setPhoneNumber(phoneNumber)\n                    .setComment(comment)\n                    .setDate(date)\n                    ;\n    }\n\n    public setDate(date): PlayerInfo {\n        this.date = date;\n        return this;\n    }\n\n    public setComment(comment): PlayerInfo {\n        this.comment = comment;\n        return this;\n    }\n\n    public setPhoneNumber(phoneNumber): PlayerInfo {\n        this.phoneNumber = phoneNumber;\n        return this;\n    }\n\n    public setEmail(email): PlayerInfo {\n        this.email = email;\n        return this;\n    }\n\n    public setFfgNumber(ffgNumber): PlayerInfo {\n        this.ffgNumber = ffgNumber;\n        return this;\n    }\n\n    public setPrenon(prenom): PlayerInfo {\n        this.prenom = prenom;\n        return this;\n    }\n\n    public setNom(nom): PlayerInfo {\n        this.nom = nom;\n        return this;\n    }\n\n    public setCircuit(circuit): PlayerInfo {\n        this.circuit = circuit;\n        return this;\n    }\n\n    public setCategorie(categorie): PlayerInfo {\n        this.categorie = categorie;\n        return this;\n    }\n\n    public setNbrRoundThisYear(nbrRoundThisYear): PlayerInfo {\n        this.nbrRoundThisYear = nbrRoundThisYear;\n        return this;\n    }\n\n    public setCivilite(civilite): PlayerInfo {\n        this.civilite = civilite.replace('Garçon', 'M').replace('Fille', 'F');\n        return this;\n    }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport {NavbarService} from './navbar.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  isLoggedIn = false;\n  role = '';\n\n  constructor(private navbarService: NavbarService) {\n    this.navbarService.getLoginStatus().subscribe(status => this.isLoggedIn = status);\n  }\n\n  verification(user: string, password: string): boolean {\n    if (user === 'btmistral' && password === 'bfgt'){\n      return true;\n    }\n    return false;\n  }\n\n  loginUser() {\n    this.navbarService.updateNavAfterAuth('user');\n    this.navbarService.updateLoginStatus(true);\n    this.role = 'user';\n  }\n\n  loginAdmin() {\n    this.navbarService.updateNavAfterAuth('admin');\n    this.navbarService.updateLoginStatus(true);\n    this.role = 'admin';\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {Subject} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NavbarService {\n\n  private links = new Array<{ text: string, path: string }>();\n  private isLoggedIn = new Subject<boolean>();\n\n  constructor() {\n    this.isLoggedIn.next(false);\n  }\n\n  getLinks() {\n    return this.links;\n  }\n\n  getLoginStatus() {\n    return this.isLoggedIn;\n  }\n\n  updateLoginStatus(status: boolean) {\n    this.isLoggedIn.next(status);\n\n    if (!status) {\n      this.clearAllItems();\n    }\n  }\n\n  updateNavAfterAuth(role: string): void {\n\n    if (role === 'user') {\n      this.addItem({ text: 'User Board', path: 'user' });\n    } else if (role === 'admin') {\n      this.addItem({ text: 'Admin Board', path: 'admin' });\n      this.addItem({ text: 'Atelier', path: 'atelier' });\n    }\n  }\n\n  addItem({ text, path }) {\n    this.links.push({ text: text, path: path });\n  }\n\n  removeItem({ text }) {\n    this.links.forEach((link, index) => {\n      if (link.text === text) {\n        this.links.splice(index, 1);\n      }\n    });\n  }\n\n  clearAllItems() {\n    this.links.length = 0;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {HomeComponent} from './_modules/home/home.component';\nimport {AdminComponent} from './_modules/admin/admin.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: '/home',\n    pathMatch: 'full'\n  },\n  {\n    path: 'home',\n    component: HomeComponent\n  },\n  {\n    path: 'admin',\n    component: AdminComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {NavbarService} from './_shared/services/navbar.service';\nimport {AuthenticationService} from './_shared/services/authentication.service';\nimport {AtelierComponent} from './_modules/atelier/atelier.component';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'dataGolf';\n\n  links: Array<{ text: string, path: string }>;\n  isLoggedIn = false;\n\n  public logged = false;\n  public username: string;\n  public password: string;\n\n  constructor(private router: Router, private navbarService: NavbarService, private authenticationService: AuthenticationService) {\n    this.router.config.unshift(\n      /* { path: 'login', component: LoginComponent },*/\n      /* { path: 'user', component: UserComponent },\n       { path: 'admin', component: AdminComponent },*/\n      { path: 'atelier', component: AtelierComponent },\n    );\n  }\n\n  ngOnInit() {\n    this.links = this.navbarService.getLinks();\n    this.navbarService.getLoginStatus().subscribe(status => this.isLoggedIn = status);\n    if (this.logged === false){\n      this.router.navigate(['home']);\n    }\n  }\n\n  logout() {\n    this.navbarService.updateLoginStatus(false);\n    this.router.navigate(['home']);\n  }\n\n  verfiyLogin() {\n    if (this.authenticationService.verification(this.username, this.password)) {\n      this.authenticationService.loginAdmin();\n      this.logged = true;\n    } else {\n      alert('Probleme d\\'authentification!');\n    }\n  }\n}\n","<nav class=\"navbar navbar-inverse\">\n\n  <div class=\"tableaux\">\n    <a class=\"navbar-brand\" href=\"#\">Golf Data Tournaments</a>\n  </div>\n\n  <div class=\"tableaux\">\n    <ul class=\"nav navbar-nav\" routerLinkActive=\"active\">\n      <li class=\"nav-item\" *ngFor=\"let link of links\">\n        <a class=\"nav-link\" [routerLink]=\"link.path\">{{ link.text }}</a>\n      </li>\n    </ul>\n\n  </div>\n\n  <div class=\"tableaux\"     style=\"float: right;\">\n    <input type=\"text\"      placeholder=\"Username\" [(ngModel)]=\"username\" name=\"username\" required *ngIf=\"!isLoggedIn\"><br>\n    <input type=\"password\"  placeholder=\"Password\" [(ngModel)]=\"password\"   name=\"password\" required required  *ngIf=\"!isLoggedIn\"><br>\n    <label *ngIf=\"!isLoggedIn\"><input type=\"checkbox\" checked=\"checked\" name=\"remember\" > Remember me</label>.\n    <button class=\"btn btn-primary\" (click)=\"verfiyLogin()\" required *ngIf=\"!isLoggedIn\" >Login</button>\n    <button class=\"btn btn-primary\" routerLink=\"logout\" (click)=\"logout()\" *ngIf=\"isLoggedIn\" >Logout</button>\n  </div>\n\n</nav>\n\n<!-- class=\"container\" -->\n<div >\n  <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AtelierComponent } from './_modules/atelier/atelier.component';\nimport { HeaderTableauComponent } from './_modules/header-tableau/header-tableau.component';\nimport { LoginComponent } from './_modules/login/login.component';\nimport { UserComponent } from './_modules/user/user.component';\nimport {FormsModule} from '@angular/forms';\nimport { HomeComponent } from './_modules/home/home.component';\nimport { AdminComponent } from './_modules/admin/admin.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AtelierComponent,\n    HeaderTableauComponent,\n    LoginComponent,\n    UserComponent,\n    HomeComponent,\n    AdminComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}